
#user  nobody;
worker_processes  auto;
worker_rlimit_nofile 100000;
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        /home/ubuntu/nginx.pid;


events {
    worker_connections   20000; 
    #1024
  #  multi-accept on;
    use epoll;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;
    access_log off;
    #error_log /home/ubuntu/log/nginx_error.log debug; 
    sendfile        on;
    tcp_nopush     on;
    tcp_nodelay on;
    #keepalive_timeout  0;
    keepalive_timeout  60;
   # client_header_timeout 10;
   # client_body_timeout 10;
    reset_timedout_connection on;
    #send_timeout 30;
    #gzip  on;

    upstream nodehttp{
    #server 127.0.0.1:8081 weight=1;
    #server 127.0.0.1:8888 down;
    #server 52.79.163.36:8081 max_fails=1 fail_timeout=10s weight=1;#Seoul2
    server 52.69.57.241:8081 max_fails=1 fail_timeout=10s weight=1;#Tokyo
    server 52.79.157.139:8081 max_fails=1 fail_timeout=10s weight=1;#Seoul3
    server 52.62.78.211:8081 max_fails=1 fail_timeout=10s weight=1;#Sydney
    #keepalive 64;
   
    }

    server {
        listen       80;
        server_name  alchelix.com;
        
        charset UTF-8;

        #access_log  logs/host.access.log  main;

        location / {
	       proxy_redirect off;  
               proxy_set_header X-Real-IP $remote_addr;  
               proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  
               proxy_set_header X-Forwarded-Proto $scheme;  
               proxy_set_header Host $http_host;  
               proxy_set_header X-NginX-Proxy true;  
               proxy_set_header Connection "";  
               proxy_http_version 1.1;  
               proxy_pass http://nodehttp; 
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
